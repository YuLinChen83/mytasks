{"version":3,"sources":["app/actions/types.js","app/actions/index.js","app/components/TodoFilter.js","app/components/TodoItem.js","app/components/VisibleTodoList.js","app/components/TodoInput.js","app/components/MyTasks.js","app/containers/MyTasksContainer.js","App.js","app/reducers/todos.js","app/reducers/visibilityFilter.js","app/reducers/index.js","serviceWorker.js","index.js"],"names":["types","fetchTodolistJson","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","data","wrap","_context","prev","next","fetch","then","response","json","sent","abrupt","dispatch","receiveTodolistJson","stop","this","apply","arguments","type","actions","addTodo","value","method","body","JSON","stringify","title","status","headers","content-type","ok","console","log","catch","error","updateTodo","id","concat","deleteTodo","toggleTodo","updatedStatus","setVisibilityFilter","filter","TodoFilter","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","setState","state","_this2","react_default","createElement","className","onClick","Component","TodoItem","handleToggle","isEditing","handleFocus","handleBlur","handleChange","e","target","handleKeyPress","charCode","todo","_this$props","delTodoClick","checked","onChange","for","onFocus","onBlur","onKeyPress","VisibleTodoList","todos","onTodoClick","map","components_TodoItem","key","TodoInput","input","onSubmit","preventDefault","trim","ref","node","MyTasks","componentDidMount","components_TodoFilter","components_VisibleTodoList","components_TodoInput","mapDispatchToProps","Actions","TodoListContainer","connect","getVisibleTodos","visibilityFilter","t","App","MyTasksContainer","length","undefined","action","item","objectSpread","todolistApp","combineReducers","Boolean","window","location","hostname","match","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","render","es","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53ba0dea.chunk.js","sourcesContent":["const ADD_TODO = 'ADD_TODO',\r\n  DELETE_TODO = 'DELETE_TODO',\r\n  TOGGLE_TODO = 'TOGGLE_TODO',\r\n  UPDATE_TODO = 'UPDATE_TODO',\r\n  FETCH_TODOLIST_JSON = 'FETCH_TODOLIST_JSON',\r\n  SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';\r\n\r\nexport default {\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  TOGGLE_TODO,\r\n  UPDATE_TODO,\r\n  FETCH_TODOLIST_JSON,\r\n  SET_VISIBILITY_FILTER\r\n}","import types from './types';\r\nimport fetch from 'cross-fetch';\r\n\r\nconst addTodo = value => {\r\n  return dispatch => {\r\n    return fetch('https://moocs-todo.herokuapp.com/api/tasks', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ title: value, status: \"DOING\" }),\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        console.log(\"addTodo ok!\", response);\r\n        const data = fetch('https://moocs-todo.herokuapp.com/api/tasks').then(response => response.json());\r\n        return data;\r\n      }\r\n    }).then(data => {\r\n      return dispatch(receiveTodolistJson(data));\r\n    }).catch(error => console.error('Error:', error));\r\n  }\r\n}\r\n\r\nconst deleteTodo = id => {\r\n  return dispatch => {\r\n    return fetch(`https://moocs-todo.herokuapp.com/api/tasks/${id}/ `, {\r\n      method: 'DELETE',\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        console.log(\"deleteTodo ok!\", response);\r\n        return dispatch({\r\n          type: types.DELETE_TODO,\r\n          id\r\n        });\r\n      }\r\n    }).catch(error => console.error('Error:', error));\r\n  }\r\n}\r\n\r\nconst toggleTodo = (id, status) => {\r\n  let updatedStatus = status === \"DOING\" ? \"DONE\" : \"DOING\";\r\n  return dispatch => {\r\n    return fetch(`https://moocs-todo.herokuapp.com/api/tasks/${id}/ `, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({ status: updatedStatus }),\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        console.log(\"toggleTodo ok!\", response);\r\n        return dispatch({\r\n          type: types.TOGGLE_TODO,\r\n          id\r\n        });\r\n      }\r\n    }).catch(error => console.error('Error:', error));\r\n  }\r\n}\r\n\r\nconst updateTodo = (id, title, status) => {\r\n  console.log(\"updateTodo action\");\r\n  return dispatch => {\r\n    return fetch(`https://moocs-todo.herokuapp.com/api/tasks/${id}/ `, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({ title: title, status }),\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        console.log(\"updateTodo ok!\", response);\r\n        return dispatch({\r\n          type: types.UPDATE_TODO,\r\n          id,\r\n          title\r\n        });\r\n      }\r\n    }).catch(error => console.error('Error:', error));\r\n  }\r\n}\r\n\r\nconst fetchTodolistJson = async () => {\r\n  const data = await fetch('https://moocs-todo.herokuapp.com/api/tasks').then(response => response.json());\r\n  return dispatch => {\r\n    dispatch(receiveTodolistJson(data));\r\n  }\r\n}\r\n\r\nconst receiveTodolistJson = json => ({\r\n  type: types.FETCH_TODOLIST_JSON,\r\n  data: json\r\n});\r\n\r\nconst setVisibilityFilter = filter => ({\r\n  type: types.SET_VISIBILITY_FILTER,\r\n  filter\r\n})\r\n\r\nexport default {\r\n  addTodo,\r\n  updateTodo,\r\n  deleteTodo,\r\n  toggleTodo,\r\n  fetchTodolistJson,\r\n  receiveTodolistJson,\r\n  setVisibilityFilter\r\n}","import React, { Component } from 'react'\r\n\r\nclass TodoFilter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filter: \"SHOW_ALL\"\r\n    };\r\n  }\r\n  handleClick = (filter) => {\r\n    this.props.setVisibilityFilter(filter);\r\n    this.setState({filter});\r\n  }\r\n  render() {\r\n    const { filter } = this.state;\r\n    return (\r\n      <div id=\"todo-filter\">\r\n        <button className={`btn ${filter === \"SHOW_ALL\" ? \"active\" : \"\"}`} onClick={() => this.handleClick(\"SHOW_ALL\")}>All</button>\r\n        <button className={`btn ${filter === \"SHOW_ACTIVE\" ? \"active\" : \"\"}`} onClick={() => this.handleClick(\"SHOW_ACTIVE\")}>Doing</button>\r\n        <button className={`btn ${filter === \"SHOW_COMPLETED\" ? \"active\" : \"\"}`} onClick={() => this.handleClick(\"SHOW_COMPLETED\")}>Done</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoFilter;","import React, { Component } from 'react'\r\n\r\nclass TodoItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: false,\r\n      title: \"...\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      isEditing: false,\r\n      title: this.props.todo.title,\r\n    });\r\n  }\r\n  handleToggle = () => {\r\n    if (!this.state.isEditing) this.props.onClick()\r\n    else return\r\n  }\r\n  handleFocus = () => {\r\n    this.setState({ isEditing: true });\r\n  }\r\n  handleBlur = () => {\r\n    this.setState({ isEditing: false });\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({ title: e.target.value });\r\n  }\r\n  handleKeyPress = (e) => {\r\n    if (e.charCode === 13) {\r\n      const todo = this.props.todo;\r\n      this.props.updateTodo(todo.id, this.state.title, todo.status);\r\n    }\r\n  }\r\n  render() {\r\n    const { todo, delTodoClick } = this.props;\r\n    return (\r\n      <li>\r\n        <div className=\"wrapper\">\r\n          <input id={todo.id} type=\"checkbox\" checked={todo.status === \"DONE\"} onChange={this.handleToggle} />\r\n          <label for={todo.id}></label>\r\n        </div>\r\n        <input\r\n          value={this.state.title}\r\n          type=\"text\"\r\n          onFocus={this.handleFocus}\r\n          onBlur={this.handleBlur}\r\n          onChange={this.handleChange}\r\n          onKeyPress={this.handleKeyPress}\r\n        />\r\n        <button className=\"pull-right\" onClick={delTodoClick}><span className=\"close\"></span></button>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem'\r\n\r\nclass VisibleTodoList extends Component {\r\n  render() {\r\n    const { todos, onTodoClick, deleteTodo, updateTodo } = this.props;\r\n\r\n    return (\r\n      <ul id=\"todolist\">\r\n        {\r\n          todos.map(todo => (\r\n            <TodoItem key={todo.id} todo={todo} onClick={() => onTodoClick(todo.id, todo.status)} delTodoClick={() => deleteTodo(todo.id)} updateTodo={updateTodo}/>\r\n          ))\r\n        }\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default VisibleTodoList;","import React, { Component } from 'react';\r\nclass TodoInput extends Component {\r\n  render() {\r\n    const { addTodo } = this.props;\r\n    let input;\r\n    return (\r\n      <div className=\"todo-input\">\r\n        <form className=\"form-inline\"\r\n          onSubmit={e => {\r\n            e.preventDefault()\r\n            if (!input.value.trim()) {\r\n              return\r\n            }\r\n            addTodo(input.value)\r\n            input.value = ''\r\n          }}\r\n        >\r\n          <div className=\"row\">\r\n            <input className=\"form-control col-md-8\"\r\n              type=\"text\"\r\n              ref={node => {\r\n                input = node\r\n              }}\r\n            />\r\n            <button type=\"submit\" className=\"btn\">Add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoInput;","import React, { Component } from 'react';\r\nimport TodoFilter from './TodoFilter'\r\nimport VisibleTodoList from './VisibleTodoList'\r\nimport TodoInput from './TodoInput'\r\n\r\nclass MyTasks extends Component {\r\n  componentDidMount = async () => {\r\n    const data = await fetch('https://moocs-todo.herokuapp.com/api/tasks').then(response => response.json());\r\n    console.log(data);\r\n    this.props.receiveTodolistJson(data);\r\n  }\r\n  render() {\r\n    const { todos, setVisibilityFilter, onTodoClick, deleteTodo, addTodo, updateTodo } = this.props;\r\n\r\n    return (\r\n      <div className=\"todo-container\">\r\n        <div>\r\n          <div className=\"todo-header\">My Tasks</div>\r\n          <TodoFilter setVisibilityFilter={setVisibilityFilter} />\r\n          <VisibleTodoList todos={todos} onTodoClick={onTodoClick} deleteTodo={deleteTodo} updateTodo={updateTodo} />\r\n          <TodoInput addTodo={addTodo} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MyTasks;","import { connect } from 'react-redux';\r\nimport Actions from '../actions';\r\nimport MyTasks from \"../components/MyTasks\";\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  setVisibilityFilter: filter => Actions.setVisibilityFilter(filter),\r\n  fetchTodolistJson: () => Actions.fetchTodolistJson(),\r\n  receiveTodolistJson: data => Actions.receiveTodolistJson(data),\r\n  onTodoClick: (id, status) => Actions.toggleTodo(id, status),\r\n  addTodo: value => Actions.addTodo(value),\r\n  updateTodo: (id, title, status) => Actions.updateTodo(id, title, status),\r\n  deleteTodo: id => Actions.deleteTodo(id),\r\n}\r\n\r\nconst TodoListContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MyTasks)\r\n\r\nexport default TodoListContainer;\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n  switch (filter) {\r\n    case 'SHOW_ALL':\r\n      return todos\r\n    case 'SHOW_COMPLETED':\r\n      return todos.filter(t => t.status === \"DONE\")\r\n    case 'SHOW_ACTIVE':\r\n      return todos.filter(t => t.status === \"DOING\")\r\n  }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport MyTasksContainer from './app/containers/MyTasksContainer'\n\nclass App extends Component {\n  render() {\n    return (\n      <MyTasksContainer />\n    );\n  }\n}\n\nexport default App;","import types from '../actions/types';\r\n\r\nconst todos = (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.DELETE_TODO:\r\n      return state.filter(item => item.id !== action.id)\r\n    case types.TOGGLE_TODO:\r\n      return state.map(todo => todo.id === action.id ? { ...todo, status: todo.status === \"DOING\" ? \"DONE\" : \"DOING\"} : todo)\r\n    case types.UPDATE_TODO:\r\n      return state.map(todo => todo.id === action.id ? { ...todo, title: action.title} : todo)\r\n    case types.FETCH_TODOLIST_JSON:\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todos;","import types from '../actions/types';\r\n\r\nconst visibilityFilter = (state = 'SHOW_ALL', action) => {\r\n  switch (action.type) {\r\n    case types.SET_VISIBILITY_FILTER:\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport default visibilityFilter;","import { combineReducers } from 'redux';\r\nimport todos from './todos';\r\nimport visibilityFilter from './visibilityFilter';\r\n\r\nconst todolistApp = combineReducers({\r\n  todos,\r\n  visibilityFilter\r\n});\r\n\r\nexport default todolistApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport reducers from './app/reducers';\nimport * as serviceWorker from './serviceWorker';\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducers,\n  composeEnhancer(applyMiddleware(thunk)),\n);\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}